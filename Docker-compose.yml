version: '3.8'
services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper
#    hostname: zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    networks:
#      - spring-boot-uber-network
#
#  broker:
#    image: confluentinc/cp-kafka
#    hostname: broker
#    container_name: broker
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#    networks:
#      - spring-boot-uber-network
#
#
#  schema-registry:
#    image: confluentinc/cp-schema-registry
#    hostname: schema-registry
#    container_name: schema-registry
#    depends_on:
#      - broker
#    ports:
#      - "8081:8081"
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:9092'
#      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
#    networks:
#      - spring-boot-uber-network

  zipkin-server:
    container_name: zipkin
    build:
      context: ./zipkin-server
      dockerfile: Dockerfile
    environment:
      - STORAGE_TYPE=mem
    ports:
      - "9411:9411"
    networks:
      - spring-boot-uber-network

  mysql-db-uber:
    image: mysql:5.7
    container_name: uber-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_CONTAINER_NAME: uber-db
      MYSQL_ROOT_PASSWORD: boca-root-password
      MYSQL_DATABASE: uber
      MYSQL_USER: kerin
      MYSQL_PASSWORD: password123
    networks:
      - spring-boot-uber-network

  activemq-broker-service:
    image: rmohr/activemq
    container_name: activemq-uber
    environment:
      ACTIVEMQ_CONTAINER_NAME: activemq-uber
    ports:
      - "8161:8161"
      - "61616:61616"
    networks:
      - spring-boot-uber-network

  eureka-server-uber:
    container_name: eureka-server-uber
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 8761
    ports:
      - "8761:8761"
    networks:
      - spring-boot-uber-network

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      - zipkin-server
      - eureka-server-uber
    networks:
      - spring-boot-uber-network

  driver-consumer-uber:
    container_name: driver-consumer-uber
    build:
      context: ./driver-consumer
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - eureka-server-uber
      - mysql-db-uber
      - activemq-broker-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://uber-db:3306/uber?pinGlobalTxToPhysicalConnection=true
      SPRING_DATASOURCE_USERNAME: kerin
      SPRING_DATASOURCE_PASSWORD: password123
      EUREKA_SERVER_HOST: eureka-server-uber
      EUREKA_SERVER_PORT: 8761
      ACTIVEMQ_CONTAINER_NAME: activemq-uber
    ports:
      - "8094:8094"
    networks:
      - spring-boot-uber-network
    entrypoint: /bin/sh
    command:
      -c "
      while ! (nc -z eureka-server-uber 8761); do sleep 5; echo 'Waiting for eureka-server-app to start-up...'; done;
      java -jar /app.jar "

  payment-consumer-uber:
    container_name: payment-consumer-uber
    build:
      context: ./payment-consumer
      dockerfile: Dockerfile
    restart: on-failure
    profiles: ["kafka"]
    depends_on:
      - eureka-server-uber
      - mysql-db-uber
      - activemq-broker-service
    networks:
      - spring-boot-uber-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://uber-db:3306/uber?pinGlobalTxToPhysicalConnection=true
      SPRING_DATASOURCE_USERNAME: kerin
      SPRING_DATASOURCE_PASSWORD: password123
      EUREKA_SERVER_HOST: eureka-server-uber
      EUREKA_SERVER_PORT: 8761
      ACTIVEMQ_CONTAINER_NAME: activemq-uber
      ZIPKIN: zipkin
    ports:
      - "8095:8095"
    entrypoint: /bin/sh
    command:
      -c " while ! (nc -z eureka-server-uber 8761); do sleep 5; echo 'Waiting for eureka-server-app to start-up...'; done;
      java -jar /app.jar "

  soap-server-uber:
    container_name: soap-server-uber
    build:
      context: ./soap-server
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - eureka-server-uber
      - mysql-db-uber
      - activemq-broker-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://uber-db:3306/uber?pinGlobalTxToPhysicalConnection=true
      SPRING_DATASOURCE_USERNAME: kerin
      SPRING_DATASOURCE_PASSWORD: password123
      EUREKA_SERVER_HOST: eureka-server-uber
      EUREKA_SERVER_PORT: 8761
      ACTIVEMQ_CONTAINER_NAME: activemq-uber
      ZIPKIN: zipkin
    ports:
      - "8092:8092"
    networks:
      - spring-boot-uber-network
    entrypoint: /bin/sh
    command:
      -c "
      while ! (nc -z eureka-server-uber 8761); do sleep 5; echo 'Waiting for eureka-server-app to start-up...'; done;
      java -jar /app.jar "

  eureka-client-app:
    container_name: eureka-client
    build:
      context: ./eureka-client
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - eureka-server-uber
    environment:
      EUREKA_SERVER_HOST: eureka-server-uber
      EUREKA_SERVER_PORT: 8761
      ACTIVEMQ_CONTAINER_NAME: activemq-uber
      SERVER_PORT: 8081
    ports:
      - "8097:8097"
    networks:
      - spring-boot-uber-network
    entrypoint: /bin/sh
    command:
      -c "
      while ! (nc -z eureka-server-uber 8761); do sleep 5; echo 'Waiting for eureka-server-uber to start-up...'; done;
      java -jar /app.jar
      "

  rest-server-uber:
    container_name: rest-server-uber
    build:
      context: ./rest-server
      dockerfile: Dockerfile
    restart: on-failure
    profiles: ["kafka"]
    depends_on:
      - eureka-server-uber
      - mysql-db-uber
      - activemq-broker-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://uber-db:3306/uber?pinGlobalTxToPhysicalConnection=true
      SPRING_DATASOURCE_USERNAME: kerin
      SPRING_DATASOURCE_PASSWORD: password123
      EUREKA_SERVER_HOST: eureka-server-uber
      EUREKA_SERVER_PORT: 8761
      ACTIVEMQ_CONTAINER_NAME: activemq-uber
      ZIPKIN: zipkin
      BROKER: broker
    ports:
      - "8093:8093"
    networks:
      - spring-boot-uber-network
    entrypoint: /bin/sh
    command:
      -c "
      while ! (nc -z eureka-server-uber 8761); do sleep 5; echo 'Waiting for eureka-server-uber to start-up...'; done;
      java -jar /app.jar "

networks:
  spring-boot-uber-network:
    driver: bridge