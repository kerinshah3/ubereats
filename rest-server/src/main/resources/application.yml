server.port: 8093
spring.datasource.url: jdbc:mysql://${MYSQL_CONTAINER_NAME:localhost}:3306/${MYSQL_DATABASE:uber}?pinGlobalTxToPhysicalConnection=true
spring.datasource.username: ${MYSQL_USER:root}
spring.datasource.password: ${MYSQL_PASSWORD:kerin3989@K}
spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver

spring.jpa.database-platform: org.hibernate.dialect.MySQL8Dialect

#jms.broker.url: tcp://localhost:61616

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST:localhost}:${EUREKA_SERVER_PORT:8761}/eureka/

spring.jpa.hibernate.ddl-auto: update
spring.jpa.show-sql: true

## Configuring info endpoint
info.app.name: rest-server-uber-app
info.app.description: This is rest-server-uber-app
info.app.version: 1.0.0

management:
  endpoints:
    web:
      exposure:
        include: '*'

kafka:
  topic:
    name: incoming_order_topic
  publisher:
    buffer-memory: 33554432
    linger-time-in-ms: 5
    publish-batch-size: 16384
    retry-count: 0
    bootstrap-servers: "localhost:9092"
    schema-registry: http://localhost:8081

spring:
#  kafka:
#    bootstrap-servers: localhost:9093
#    producer:
#      properties:
#        schema:
#          registry:
#            url: http://localhost:8081
#      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#    properties:
#      schema:
#        registry:
#          url: http://localhost:8081
  zipkin:
    base-url: http://${ZIPKIN:localhost}:9411/
    sender.type: web
  sleuth.sampler.probability: 1
  profiles.active: ${SPRING_PROFILES_ACTIVE:kafka}
  application:
    name: Rest Server
  jpa:
    properties:
      hibernate:
        dialect=org:
          hibernate:
            dialect:
              MySQL5Dialect:
        format_sql: true
  jms:
    template:
      default-destination: delivery_order_queue
    listener:
      acknowledge-mode: DUPS_OK
  activemq:
    broker-url: tcp://${ACTIVEMQ_CONTAINER_NAME:localhost}:61616
  jta:
    log-dir: ./rest-server
    atomikos:
      datasource:
        localTransactionMode: true
      properties:
        max-timeout: 9000000
        enable-logging: false